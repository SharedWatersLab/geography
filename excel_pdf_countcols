import pandas as pd
import numpy as np

def create_pdf_sheet(input_excel, output_pdf):
    # Read BCODE_excel sheet
    df_excel = pd.read_excel(input_excel)
    
    # Select only specific columns with desired headers
    df_excel = df_excel.loc[:, ["BCODE", "Basin_Name", "start_date", "end_date"]]

     # Initialize an empty DataFrame for the result
    df_result = pd.DataFrame(columns=["BCODE", "Basin_Name", "key", "set_date", "over_thousand", "start_date", "end_date", "start_count", "stop_count", "total_count", "file_name", "finished"])

    # Populate the "key" column with values starting from 1
    df_result["key"] = range(1, len(df_excel) + 1)

    # Populate other columns with values from df_excel
    df_result["BCODE"] = df_excel["BCODE"]
    df_result["Basin_Name"] = df_excel["Basin_Name"]
    df_result["start_date"] = df_excel["start_date"]
    df_result["end_date"] = df_excel["end_date"]

    # Initialize an empty DataFrame to store repeated rows
    repeated_df = pd.DataFrame(columns=df_result.columns)

    # Repeat each row 10 times and append to the result DataFrame
    for _, row in df_result.iterrows():
        repeated_rows = pd.concat([pd.DataFrame(row).transpose()] * 10, ignore_index=True)
        repeated_df = pd.concat([repeated_df, repeated_rows], ignore_index=True)

    # Add "set_date" column with desired values
    set_date_values = np.concatenate(([1], np.zeros(9)))  # Generates [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    repeated_df["set_date"] = np.tile(set_date_values, len(df_result))
        
    # Add "start_count" column with desired values
    start_count_values = np.arange(1, 902, 100)  # Generates [1, 101, 201, ..., 901]
    repeated_df["start_count"] = np.tile(start_count_values, len(df_result))

    # Add "stop_count" column with desired values
    stop_count_values = np.arange(100, 1001, 100)  # Generates [100, 200, 300, ..., 1000]
    repeated_df["stop_count"] = np.tile(stop_count_values, len(df_result))


    # Concatenate the repeated DataFrame with df_result
    df_result = pd.concat([repeated_df], ignore_index=True)

    # Convert "start_date" and "end_date" columns to the desired date format
    df_result["start_date"] = pd.to_datetime(df_result["start_date"]).dt.strftime('%m/%d/%Y')
    df_result["end_date"] = pd.to_datetime(df_result["end_date"]).dt.strftime('%m/%d/%Y')

    # Write the result to BCODE_pdf and add index
    df_result.to_excel(output_pdf, index=True, index_label="index")

# Replace BCODE below with the BCODE
input_excel = "/Users/selenawallace/Documents/Data_Science/geography/status/excel/ZAMB_excel.xlsx"
output_pdf = "/Users/selenawallace/Documents/Data_Science/geography/status/pdf/ZAMB_pdf.xlsx"

create_pdf_sheet(input_excel, output_pdf)
